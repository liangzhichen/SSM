<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    <!-- 我们可以在其中添加我们所需要配置的bean，也可以添加相应的数据库连接和事务处理等等，方便后续拓展
           -->

    <!--控制器-->
    <context:component-scan base-package="com.clz.*,com.timeTask.*" />

    <!--开启注解,解决乱码问题-->
    <mvc:annotation-driven/>

    <mvc:annotation-driven>
    <mvc:message-converters>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>text/plain;charset=UTF-8</value>
                    <value>text/html;charset=UTF-8</value>
                </list>
            </property>
        </bean>
    </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="dataSource" class="com.sinovatech.hd.tools.uitl.db.DbcpPool"  destroy-method="close">

        <property name="url" value="jdbc:oracle:thin:@20.26.11.7:1521:CSHP04" />
        <property name="username" value="sjyyt" />
        <property name="password" value="e8a7a4d6d8bc50c3c0158e64d4ca03aa" />
        <!--
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:orclWTF" />
        <property name="username" value="sjyyt" />
        <property name="password" value="123456" /> -->

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

    </bean>

    <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置定时任务并行执行的个数-->
    <task:executor id="executor" pool-size="5" />
    <!-- 配置定时任务线程池大小-->
    <task:scheduler id="scheduler" pool-size="10" />
    <!-- 开启定时任务-->
    <task:annotation-driven executor="executor" scheduler="scheduler" />

    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置 value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件
            UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描 -->
        <property name="mapperLocations" value="classpath:com/clz/**/*.xml" />
        <property name="typeAliasesPackage" value="com.isea533.ssm.model" />
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=oracle
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.clz.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- Bean自动代理处理器 配置 -->
    <!--<bean-->
            <!--class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--<property name="beanNames">-->
            <!--<list>    &lt;!&ndash; 配置需要进行日志记录的Service和Dao <value>*Mapper</value> &ndash;&gt;-->
                <!--&lt;!&ndash; 配置所有Service结尾命名的Bean，即所有Service层的类都要经过exceptionHandler异常处理类 &ndash;&gt;-->
                <!--<value>*Service</value>  &lt;!&ndash; Service层的Bean ID 命名要以Service结尾 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--&lt;!&ndash;<value>exceptionHandler</value> <value>transactionInterceptor</value> &ndash;&gt;-->
                <!--<value>logLnterceptor</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>